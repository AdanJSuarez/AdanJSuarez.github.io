<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software and IT Consultant</title>
    <link>https://adanjsuarez.github.io/</link>
    <description>Recent content on Software and IT Consultant</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Â©[Adan J. Suarez](https://adanjsuarez.com)</copyright>
    <lastBuildDate>Tue, 07 Feb 2023 16:48:35 -0500</lastBuildDate>
    <atom:link href="https://adanjsuarez.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Why I say not to Timed Coding Test</title>
      <link>https://adanjsuarez.github.io/posts/software/whyisaynottotct/</link>
      <pubDate>Tue, 07 Feb 2023 16:48:35 -0500</pubDate>
      <guid>https://adanjsuarez.github.io/posts/software/whyisaynottotct/</guid>
      <description>&lt;p&gt;For a good explanation and also good post about &lt;em&gt;timed coding test&lt;/em&gt;, (TCT) you can check this &lt;a href=&#34;https://torazaburo.medium.com/the-tyranny-of-the-timed-coding-interview-6d40a54c0733&#34;&gt;link&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;A TCT could check your ability to solve some problems, algorithms most of them, in a timely manner. It could give you some idea of how good you are as problem solving person. But is that enough? or even good measure of how &amp;ldquo;good&amp;rdquo; your are?&lt;/p&gt;&#xA;&lt;p&gt;Solving TCTs could be trained. With a couple of weeks of intensive work, you could do it decently, which doesn&amp;rsquo;t play in favor of the TCTs to discriminate good from bad developers. ðŸ˜³&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hire me</title>
      <link>https://adanjsuarez.github.io/hireme/</link>
      <pubDate>Sun, 05 Feb 2023 10:06:42 -0500</pubDate>
      <guid>https://adanjsuarez.github.io/hireme/</guid>
      <description>&lt;p&gt;Coming soon!&lt;/p&gt;</description>
    </item>
    <item>
      <title>About</title>
      <link>https://adanjsuarez.github.io/about/</link>
      <pubDate>Sat, 04 Feb 2023 20:01:47 -0500</pubDate>
      <guid>https://adanjsuarez.github.io/about/</guid>
      <description>&lt;h3 id=&#34;quick-introduction&#34;&gt;Quick introduction:&lt;/h3&gt;&#xA;&lt;p&gt;I am a Senior Software Engineer focused mainly in Golang, C/C++ and Python. I&amp;rsquo;ve worked with other languages like Typescript/Javascript, Java and Racket(Lisp).&lt;/p&gt;&#xA;&lt;p&gt;I have three main areas of knowledge and interest based on my background: Software development, Financial Markets and Military (Navy)&lt;/p&gt;&#xA;&lt;p&gt;I have two Master&amp;rsquo;s degrees:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;MD. in General Navy Corp.&lt;/li&gt;&#xA;&lt;li&gt;MD. in Stock Markets and Financial Derivatives.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>CGO isn&#39;t a beast</title>
      <link>https://adanjsuarez.github.io/posts/software/cgo/</link>
      <pubDate>Sat, 04 Feb 2023 15:32:59 -0500</pubDate>
      <guid>https://adanjsuarez.github.io/posts/software/cgo/</guid>
      <description>&lt;p&gt;The formal info about CGO is &lt;a href=&#34;https://pkg.go.dev/cmd/cgo&#34;&gt;here&lt;/a&gt;. CGO is a Go tool very useful that you could find in many projects but if you read some articles, they say that CGO is dangerous and your should avoid it. &lt;code&gt;Is it that true?&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;What is CGO in a simple way? Basically is a tool that allows us to write C code with Go syntax. In other words in C inside Go. Okay, simple but&amp;hellip; &lt;code&gt;why do we need it?&lt;/code&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
